server:
  port: 8081
https:
  port: 8443
  ssl:
    key-store: classpath:sample.jks
    key-store-password: secret
    key-password: password
spring:
  data:
    mongodb:
      host: 192.168.198.71
      database: drgs-auto
      port: 27017
  rabbitmq:
    addresses: 192.168.199.133:5672
    username: admin
    password: admin
    # 是否开启消息发送到交换器（Exchange）后触发回调
    publisher-confirms: false
    # 是否开启消息发送到队列（Queue）后触发回调
    publisher-returns: false
    # 消息发送失败重试相关配置
    template:
      retry:
        enabled: true
        initial-interval: 3000ms
        max-attempts: 3
        max-interval: 10000ms
        multiplier: 1
      # 消息接收确认，可选模式：NONE（不确认）、AUTO（自动确认）、MANUAL（手动确认）
    listener:
      simple:
        acknowledge-mode: AUTO
    # 最小线程数量
        concurrency: 10
    # 最大线程数量
        max-concurrency: 10
    # 每个消费者可能未完成的最大未确认消息数量
        prefetch: 1
#  data:
#    mongodb:
#      uri: mongodb://192.168.198.71:27017
#      database: record
  jpa:
    show-sql: true
    properties:
      hibernate:
          hbm2ddl:
            auto: update
  datasource:
    url: jdbc:mysql://localhost:3306/test?serverTimezone=UTC&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    #druid数据库连接池相关配置
    platform: mysql
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true

  redis:
    host: 127.0.0.1
    port: 6379
    password: 123456

test:
  str: 123
